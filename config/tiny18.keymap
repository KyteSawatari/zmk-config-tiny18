#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>


/ {
    combos {
        compatible = "zmk,combos";

        q {
            bindings = <&kp Q>;
            key-positions = <0 1>;
            layers = <0>;
        };

        t {
            bindings = <&kp T>;
            key-positions = <2 3>;
            layers = <0>;
        };

        y {
            bindings = <&kp Y>;
            key-positions = <3 4>;
            layers = <0>;
        };

        p {
            bindings = <&kp P>;
            key-positions = <4 5>;
            layers = <0>;
        };

        g {
            bindings = <&kp G>;
            key-positions = <8 9>;
            layers = <0>;
        };

        h {
            bindings = <&kp H>;
            key-positions = <10 11>;
            layers = <0>;
        };

        x {
            bindings = <&kp X>;
            key-positions = <6 7>;
            layers = <0>;
        };

        z {
            bindings = <&kp Z>;
            key-positions = <6 7 8>;
            layers = <0>;
        };

        space {
            bindings = <&kp SPACE>;
            key-positions = <7 8 9>;
            layers = <0>;
        };

        b {
            bindings = <&kp B>;
            key-positions = <14 15>;
            layers = <0>;
        };

        lang1 {
            bindings = <&mt LEFT_GUI LANGUAGE_2>;
            key-positions = <7 8>;
            layers = <0>;
        };

        lang2 {
            bindings = <&mt RIGHT_GUI LANGUAGE_1>;
            key-positions = <11 12>;
            layers = <0>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1 2>;
            layers = <0>;
        };

        comma {
            bindings = <&kp COMMA>;
            key-positions = <16 17>;
            layers = <0>;
        };

        period {
            bindings = <&kp PERIOD>;
            key-positions = <10 16>;
            layers = <0>;
        };

        question {
            bindings = <&kp QUESTION>;
            key-positions = <10 11 12>;
            layers = <0>;
        };

        excl {
            bindings = <&kp EXCLAMATION>;
            key-positions = <0 1>;
            layers = <1>;
        };

        percent {
            bindings = <&kp PERCENT>;
            key-positions = <1 2>;
            layers = <1>;
        };

        cret {
            bindings = <&kp CARET>;
            key-positions = <3 4>;
            layers = <1>;
        };

        rpar {
            bindings = <&kp RPAR>;
            key-positions = <4 5>;
            layers = <1>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <10 11>;
            layers = <1>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <11 12>;
            layers = <1>;
        };

        n1 {
            bindings = <&kp N1>;
            key-positions = <0 1>;
            layers = <2>;
        };

        n5 {
            bindings = <&kp N5>;
            key-positions = <1 2>;
            layers = <2>;
        };

        n6 {
            bindings = <&kp N6>;
            key-positions = <7 8>;
            layers = <2>;
        };

        n0 {
            bindings = <&kp N0>;
            key-positions = <8 9>;
            layers = <2>;
        };

    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                              &kp W  &kp E               &kp R    &kp U    &kp I  &kp O
            &mt LEFT_SHIFT A  &kp S  &kp D               &kp T    &kp H    &kp K  &kp L  &mt RIGHT_SHIFT ENTER
                                     &mt LEFT_COMMAND C  &lt 1 V  &lt 2 M  &kp N
            >;
        };

        layer_1 {
            bindings = <
                            &kp AT            &kp HASH      &kp DOLLAR        &kp AMPS          &kp ASTRK  &kp LPAR
            &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp SEMICOLON     &kp SINGLE_QUOTE  &kp BACKSLASH  &trans
                                           &kp trans     &kp trans         &kp LEFT_BRACKET  &kp RIGHT_BRACE
            >;
        };

        layer_2 {
            bindings = <
                     &kp N2  &kp N3   &kp N4         &mo 5     &kp UP_ARROW    &mo 4
            &trans   &kp N7  &kp N8   &kp N9         &kp LEFT  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
                             &trans   &kp BACKSPACE  &trans    &trans
            >;
        };

        layer_3 {
            bindings = <
                    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL  &mo 4   &lt 4 ASTRK
            &kp N7  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS  &trans  &kp RIGHT_SHIFT  &kp SLASH
                                  &kp N8        &kp N9        &kp N0     &kp PERIOD
            >;
        };

        layer_4 {
            bindings = <
                    &kp F1  &kp F2  &kp F3  &kp F10  &kp F11  &trans
            &kp F4  &kp F5  &kp F6  &kp F7  &kp F12  &trans  &trans  &trans
                            &kp F8  &kp F9  &trans   &trans
            >;
        };

        layer_5 {
            bindings = <
                    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans  &trans
            &trans  &bt BT_SEL 3  &bt BT_SEL 4  &trans        &trans  &trans  &trans  &trans
                    &trans        &trans        &trans        &trans
            >;
        };
    };
};
